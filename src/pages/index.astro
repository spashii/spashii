---
import Link from '@/components/Link.astro'
import PageHead from '@/components/PageHead.astro'
import { buttonVariants } from '@/components/ui/button'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import { getAllJournalPosts } from '@/lib/notion'

const journal = await getAllJournalPosts()
const recentJournal = journal.slice(0, SITE.featuredPostCount)
---

<Layout>
  <PageHead slot="head" title="Home" />

  <!-- Search Section -->
  <section class="mb-8">
    <div class="flex flex-col gap-4">
      <div class="text-center">
        <h2 class="mb-2 text-2xl font-medium">Search & Explore</h2>
        <p class="text-muted-foreground mb-4 text-sm">
          Search through journal entries, projects, and more
        </p>
      </div>
      <div class="flex justify-center">
        <div class="w-full max-w-2xl">
          <div id="search-container">
            <!-- Search component will be mounted here -->
          </div>
        </div>
      </div>
    </div>
  </section>

  <section>
    <div class="rounded-lg border">
      <div class="flex flex-col space-y-1.5 p-6">
        <h3 class="text-3xl leading-none font-medium">er·u·dite</h3>
        <p class="text-muted-foreground text-sm">
          /ˈer(y)əˌdīt/ &bull; <span class="font-medium">adjective</span>
        </p>
      </div>
      <div class="p-6 pt-0">
        <p class="text-muted-foreground mb-2 text-sm">
          astro-erudite is an opinionated, unstyled static journal template
          built with <Link
            href="https://astro.build"
            class="text-foreground"
            external
            underline>Astro</Link
          >, <Link
            href="https://tailwindcss.com"
            class="text-foreground"
            external
            underline>Tailwind</Link
          >, and <Link
            href="https://ui.shadcn.com"
            class="text-foreground"
            external
            underline>shadcn/ui</Link
          >. Extraordinarily loosely based on the <Link
            href="https://astro-micro.vercel.app/"
            class="text-foreground"
            external
            underline>Astro Micro</Link
          > theme.
        </p>
        <p class="text-muted-foreground text-sm">
          To use this template, check out the <Link
            href="https://github.com/jktrn/astro-erudite"
            class="text-foreground"
            underline
            external>GitHub</Link
          > repository.
        </p>
      </div>
    </div>
  </section>
  <section class="flex flex-col gap-y-4">
    <h2 class="text-2xl font-medium">Latest entries</h2>
    <ul class="flex flex-col gap-y-4">
      {
        recentJournal.map((post) => (
          <li>
            <article class="group hover:bg-muted/50 relative rounded-lg border p-6 transition-colors">
              <div class="flex flex-col gap-2">
                <h3 class="text-xl font-semibold">
                  <a href={`/journal/${post.slug}`} class="hover:underline">
                    {post.title}
                  </a>
                </h3>
                <p class="text-muted-foreground">{post.description}</p>
                <div class="text-muted-foreground flex items-center gap-2 text-sm">
                  <time datetime={post.publishedAt || post.createdAt}>
                    {new Date(
                      post.publishedAt || post.createdAt
                    ).toLocaleDateString()}
                  </time>
                  {post.tags && post.tags.length > 0 && (
                    <>
                      <span>•</span>
                      <div class="flex gap-1">
                        {post.tags.map((tag) => (
                          <a
                            href={`/tags/${encodeURIComponent(tag.name)}`}
                            class="bg-secondary hover:bg-secondary/80 rounded px-2 py-1 text-xs transition-colors"
                          >
                            #{tag.name}
                          </a>
                        ))}
                      </div>
                    </>
                  )}
                </div>
              </div>
            </article>
          </li>
        ))
      }
    </ul>
    <div class="flex justify-center">
      <Link
        href="/journal"
        class={buttonVariants({ variant: 'ghost' }) + ' group'}
      >
        See all entries <span
          class="ml-1.5 transition-transform group-hover:translate-x-1"
          >&rarr;</span
        >
      </Link>
    </div>
  </section>
</Layout>

<script>
  import SearchProvider from '@/components/SearchProvider.tsx'
  import { createElement } from 'react'
  import { createRoot } from 'react-dom/client'

  // Get the journal data passed from the server
  const journal = window.__JOURNAL_DATA__ || []

  // Mount the SearchProvider component
  const searchContainer = document.getElementById('search-container')
  if (searchContainer) {
    const root = createRoot(searchContainer)
    root.render(
      createElement(SearchProvider, {
        posts: journal,
        className: 'w-full',
      })
    )
  }
</script>

<script is:inline define:vars={{ journal }}>
  // Pass the journal data to the client-side script
  window.__JOURNAL_DATA__ = journal
</script>
